---
title: "Paroxetine qualification report"
subtitle: "" # Subtitle of the document. May be left empty
author: "esqlabs GmbH"
date: "now"
date-format: "YYYY-MM-DD HH:mm:ss"
params:
  # If `TRUE`, results will be loaded
  # Sub-folder where simulated results is located, in case `loadPreSimulatedResults`
  # is `TRUE`. If `NULL`, default results folder as specified in `ProjectConfiguration`
  # is used.
  # Sub-folder where the results will be stored. If NULL, a folder in the "Results"
  # folder with current data name will be created.
  # If TRUE, parameters defined in "InputCode/TestParameters.R" will be applied to all
  # simulations
  # If set to TRUE, only static content of the report will be generated,
  # i.e., R code will not be executed
  loadPreSimulatedResults: TRUE
  loadResultsFolder: "2023-07-23 21-57"
  saveResultsFolder: NULL
  setTestParameters: FALSE
  createOnlyStaticContent: FALSE
output-file: "Paroxetine qualification report"
format:
  pdf: 
    # table of contents and lists
    # Caption locations
    # Other
    # Figures rendering
    # Document layout as used by Word reports
    toc: true # display table of content (TOC)
    toc-depth: 3 # display three levels in TOC
    toc-title: Table of Content # override default "Content" TOC title
    lof: false # Print list of figures?
    lot: false # Print list of tables?
    fig-cap-location: bottom # figure captions location
    tbl-cap-location: bottom # table captions location
    number-sections: true # add number to sections
    colorlinks: true # links format
    fig-pos: "H" # ensure plots don't move to bottom of doc
    fig-align: center # plots are centered by default
    geometry:
      - top=25.4mm
      - bottom=25.4mm
      - left=25.4mm
      - right=25.4mm
    papersize: A4
   # fontfamily: "Segoe UI" # Can we use "Segoe UI Light" here?
execute:
  echo: false # do not show code chunks
  output: true
  warning: false # do not print warning
  cache: false # do not use cache unless specified in chunks
link-citations: TRUE
reference-section-title: "References"
editor:
  markdown:
    wrap: 72
editor_options:
  chunk_output_type: console
bibliography: references.bib
---

```{r setup, message=FALSE, include = FALSE, eval = !params$createOnlyStaticContent}
wd <- file.path(getwd(), "..")
setwd(wd)
source("Report/utilities-report/initEsqlabsProject.R")
projectConfiguration <- initEsqlabsProject()
```

```{r runSimulations, eval=!params$createOnlyStaticContent}
setwd(wd)
projectConfiguration$scenarioDefinitionFile <- "Scenarios_paro.xlsx"
scenarioNames <- NULL
scenarioResults <- simulateScenarios(
  projectConfiguration = projectConfiguration,
  loadPreSimulatedResults = params$loadPreSimulatedResults,
  setTestParameters = params$setTestParameters,
  scenarioNames = scenarioNames,
  loadResultsFolder = params$loadResultsFolder,
  saveResultsFolder = params$saveResultsFolder
)
```

```{r loadData, message=FALSE, include = FALSE, eval = !params$createOnlyStaticContent}
setwd(wd)
# Load from PKML
projectConfiguration$dataFolder <- "Data/Paroxetine"
observedData <- esqlabsR::loadObservedDataFromPKML(projectConfiguration)

# # Or load from excel
# dataSheets <- c("Sheet 1")
# 
# observedData <- esqlabsR::loadObservedData(
#   projectConfiguration = projectConfiguration,
#   sheets = dataSheets
# )
```

```{r createPlots, eval = !params$createOnlyStaticContent}
setwd(wd)
projectConfiguration$plotsFile <- "Plots_paro.xlsx"
plotGridNames <- NULL
allPlots <- createPlotsFromExcel(
  simulatedScenarios = scenarioResults$simulatedScenarios,
  observedData = observedData,
  projectConfiguration = projectConfiguration,
  plotGridNames = plotGridNames
)
```

```{r exportPlots, eval = !params$createOnlyStaticContent}
# Export plots to png
#Create export configuration that will be used for exporting plots.
exportConfiguration <- createEsqlabsExportConfiguration(projectConfiguration)
# Figures should be saved in the same folder as the location of the report
# plus subfolder "Figures"
exportConfiguration$path <- file.path(getwd(), "Figures")
# Export each created plot
for (plotName in names(allPlots)){
  plot <- allPlots[[plotName]]
  # Replace "\" and "/" by "_" so the file name does not result in folders
      plotName <- gsub(pattern = "\\", "_", plotName, fixed = TRUE)
      plotName <- gsub(pattern = "/", "_", plotName, fixed = TRUE)
      exportConfiguration$name <- plotName
      # Save plot
      exportConfiguration$savePlot(plot)
}
```

\newpage

::: callout-note
```{r resultsOrigin, echo=FALSE, results='asis'}
if (params$loadPreSimulatedResults) {
  cat(
    "This report has been created with simulation results loaded from results folder ",
    params$loadResultsFolder, ".\n"
  )
} else {
  cat("This report has been created by running the simulations.")
}

if (params$setTestParameters) {
  cat("WARNING: `setTestParameters` is set to `TRUE`!")
}
```
:::

\newpage

# Introduction

This document describes the qualification of a published paroxetine
physiologically-based pharmacokinetics (PBPK) model for use with the
Open Systems Pharmacology Software (OSPS) Version 11.2.

The PBPK model has been developed with OSPS version 10 and published by
[@rudesheimPhysiologicallyBasedPharmacokinetic2022]. Model snapshot was
downloaded on 21.07.2023 from the model
[repository](https://github.com/Clinical-Pharmacy-Saarland-University/Paroxetine-Model).
As of 21.07.2023, no model version qualified for OSP version 11.2 is
publicly available.

# Methods

## Software

The qualification is performed with OSPS [version
11.2.142](https://github.com/Open-Systems-Pharmacology/PK-Sim/releases/tag/v11.2.142).

## Qualification process

1.  Import project snapshot "paroxetine-model.json" in PK-Sim v11.2.

2.  The snapshot contains 33 simulations. All simulations were exported
    to `*.pkml` for simulation in R.

3.  All observed data from the project created with version 11.2 were
    exported `*.pkml` for loading in R.

4.  Simulations were simulated in R and the resultsÂ visually compared to
    the results reported in the original publication.

## Model consolidation

During conversion of projects created with versions before 11, a
separate expression profile is created for each individual. To ensure
that all individuals are using the same expression, expression profiles
of the same protein were compared. All expression profiles for the same
protein were equal. Therefore, the same expression profile was set in
every individual, and the remaining profiles were removed.

# Results

Comparison of time-concentration profiles with observed data are
presented in the following:

```{r printFigures, results = 'asis', eval = TRUE}
if (params$createOnlyStaticContent) {
  fileNames <- list.files(path = file.path(getwd(), "Figures"),
                          pattern = "*.PNG",
                          full.names = FALSE)
  plotNames <- tools::file_path_sans_ext(fileNames)
} else {
  plotNames <- sort(names(allPlots))
}

for (plotName in plotNames){
  plotName <- gsub(pattern = "\\", "_", plotName, fixed = TRUE)
  plotName <- gsub(pattern = "/", "_", plotName, fixed = TRUE)
  filePath <- file.path(getwd(), "Figures", paste0(plotName, ".png"))
  cat("![", plotName, "](", filePath,")\n")
}
```

# Conclusion

All simulations that are available in the snapshot produced the same results 
as in the original publication (by visual comparison). Not all reported simulations
are implemented in the snapshot, their comparison was not possible. It is, however,
assumed that the model behaves exactly as described in the original publication.
